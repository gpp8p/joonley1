all retail shops:

select company.name, company.id from company, companytype, compcanbe where
company.id = compcanbe.company_id
and compcanbe.ctype_id = companytype.id
and companytype.slug= 'rshop';

all craft producers:

select company.name, company.id from company, companytype, compcanbe where
company.id = compcanbe.company_id
and compcanbe.ctype_id = companytype.id
and companytype.slug= 'cprod';

west coast craft producers:

select company.name, company.id from company, companytype, compcanbe, companyloc, locations  where
company.id = companyloc.company_id
and companyloc.location_id = locations.id
and locations.name = 'West Coast'
and company.id = compcanbe.company_id
and compcanbe.ctype_id = companytype.id
and companytype.slug= 'cprod';

east coast producers:

select company.name, company.id from company, companytype, compcanbe, companyloc, locations  where
company.id = companyloc.company_id
and companyloc.location_id = locations.id
and locations.name = 'East Coast'
and company.id = compcanbe.company_id
and compcanbe.ctype_id = companytype.id
and companytype.slug= 'cprod';

east coast buyers:

select company.name, company.id from company, companytype, compcanbe, companyloc, locations  where
company.id = companyloc.company_id
and companyloc.location_id = locations.id
and locations.name = 'East Coast'
and company.id = compcanbe.company_id
and compcanbe.ctype_id = companytype.id
and companytype.role= 'buyer';

virginia buyers:
select company.name, company.id from company, companytype, compcanbe, companyloc, locations  where
company.id = companyloc.company_id
and companyloc.location_id = locations.id
and locations.name = 'Virginia'
and company.id = compcanbe.company_id
and compcanbe.ctype_id = companytype.id
and companytype.role= 'buyer';

all product names:

 select name from product;

all product names that are for sale and their collections:

select product.name, collection.name from product, collection, collectionhas, containedas
where product.id = collectionhas.product_id
and collectionhas.collection_id = collection.id
and collectionhas.containedas_id = containedas.id
and containedas.slug='issale'

all company names and product names that are for sale and their collections:

select product.name, collection.name, company.name from product, collection, collectionhas, containedas, company, hascollection
where product.id = collectionhas.product_id
and collectionhas.collection_id = collection.id
and collectionhas.containedas_id = containedas.id
and containedas.slug='issale'
and hascollection.collection_id = collection.id
and hascollection.company_id = company.id



selecting product names and company names for products that lie in a specified category:

select product.name, collection.name, company.name, product.type_id from product, collection, collectionhas, containedas, company, hascollection, nested_category
where product.id = collectionhas.product_id
and product.name in (

select product.name from product, nested_category
where product.type_id=nested_category.id
and nested_category.lft between (
select nested_category.lft from nested_category where
nested_category.name = 'Bracelets'
)
and
(
select nested_category.rgt from nested_category where
nested_category.name = 'Bracelets'
)



)
and product.type_id > nested_category.lft
and product.type_id < nested_category.rgt
and nested_category.name = 'Bracelets'
and collectionhas.collection_id = collection.id
and collectionhas.containedas_id = containedas.id
and containedas.slug='issale'
and hascollection.collection_id = collection.id
and hascollection.company_id = company.id



select nested_category.name from nested_category, product where
product.type_id = nested_category.id
and product.id = 9


select nested_category.lft from nested_category where
nested_category.name =
(select nested_category.name from nested_category, product where
 product.type_id = nested_category.id
 and product.id = 10
)

select product.name from product, nested_category
where product.type_id=nested_category.id
and nested_category.lft>(
select nested_category.lft from nested_category where
nested_category.name =
(select nested_category.name from nested_category, product where
 product.type_id = nested_category.id
 and product.id = 10
)
)


A 'between' query

select product.name from product, nested_category
where product.type_id=nested_category.id
and nested_category.lft between (
select nested_category.lft from nested_category where
nested_category.name =
(select nested_category.name from nested_category, product where
 product.type_id = nested_category.id
 and product.id = 10
)
)
and
(
select nested_category.rgt from nested_category where
nested_category.name =
(select nested_category.name from nested_category, product where
 product.type_id = nested_category.id
 and product.id = 10
)
)


Products in a specified product category:

select product.name from product, nested_category
where product.type_id=nested_category.id
and nested_category.lft between (
select nested_category.lft from nested_category where
nested_category.name = 'Bracelets'
)
and
(
select nested_category.rgt from nested_category where
nested_category.name = 'Bracelets'
)


all sellable products from a specified category (extended version)

select product.name as product, product.description as description, medialink.url as media_url, mediatype.name as media_type, collection.name as collection, company.name as company from product, nested_category, medialink, mediatype, producthaslinks, collection, collectionhas, containedas, company, hascollection
where product.type_id=nested_category.id
and producthaslinks.product_id = product.id
and medialink_id = medialink.id
and collectionhas.product_id = product.id
and collectionhas.collection_id = collection.id
and collectionhas.containedas_id = containedas.id
and containedas.slug='issale'
and hascollection.collection_id = collection.id
and hascollection.company_id = company.id
and mediatype.id = medialink.mediatype_id
and nested_category.lft between (
select nested_category.lft from nested_category where
nested_category.name = 'Bracelets'
)
and
(
select nested_category.rgt from nested_category where
nested_category.name = 'Bracelets'
)





all products from a specified location:
select product.id, product.name as product_name, product.description as 'product_description', company.name as 'company_name', collection.name as 'collection_name', medialink.url as 'product_image'  from company, locations, companyloc, collection, hascollection, product, collectionhas, medialink, producthaslinks
where company.id = companyloc.company_id
and companyloc.location_id = locations.id
and locations.name='East Coast'
and company.id = hascollection.company_id
and collection.id = hascollection.collection_id
and collectionhas.collection_id = collection.id
and collectionhas.product_id = product.id
and (medialink.pertainsto='product' or medialink.pertainsto='*')
and producthaslinks.product_id = product.id
and producthaslinks.medialink_id = medialink.id


note: there must be a  producthaslinks record for each product - any way to get around this ?


